import Lift from"./lift.js";import Skier from"./skier.js";import Util from"./util.js";export default class Game{constructor(){this.util=new Util,this.skier=new Skier(this),this.lift=new Lift(this),this.treeSmallDensity=.6,this.treeLargeDensity=.3,this.treeBareDensity=.1,this.bumpGroupDensity=.2,this.bumpSmallDensity=.2,this.bumpLargeDensity=.2,this.rockDensity=.05,this.stumpDensity=.05,this.jumpDensity=.05,this.otherSkierDensity=.05,this.snowboarderDensity=.05,this.jumpVBase=.7,this.jumpVMult=.0022,this.resCoefficient=50/562860,this.collisionsEnabled=!0,this.doImageLoadCheck=!0,this.images=[],this.loadAssets(),this.init()}init(){this.skier.init(),this.lift.init(),this.isPaused=!1,this.drawIsPaused=!1,this.yDist=0,this.style=0,this.mousePos={x:0,y:0},this.startTime=this.util.timestamp(),this.currentTime=this.startTime,this.timestampFire=this.startTime,this.timestampPaused=this.startTime,this.gameWidth=Math.max(screen.width,window.innerWidth),this.gameHeight=Math.max(screen.height,window.innerHeight),this.skierTrail=[],this.currentTreeFireImg=this.tree_bare_fire1,this.stylePointsToAwardOnLanding=0,this.calculateGameObjectCounts(),this.treesSmall=this.initGameObjectsAtStart("tree_small",this.treeSmallCount),this.treesLarge=this.initGameObjectsAtStart("tree_large",this.treeLargeCount),this.treesBare=this.initGameObjectsAtStart("tree_bare",this.treeBareCount),this.bumpsGroup=this.initGameObjectsAtStart("bump_group",this.bumpGroupCount),this.bumpsSmall=this.initGameObjectsAtStart("bump_small",this.bumpSmallCount),this.bumpsLarge=this.initGameObjectsAtStart("bump_large",this.bumpLargeCount),this.rocks=this.initGameObjectsAtStart("rock",this.rockCount),this.jumps=this.initGameObjectsAtStart("jump",this.jumpCount),this.stumps=this.initGameObjectsAtStart("stump",this.stumpCount),this.otherSkiers=this.initGameObjectsAtStart("other_skier",this.otherSkierCount),this.snowboarders=this.initGameObjectsAtStart("snowboarder",this.snowboarderCount)}loadAssets(){this.loadFont(),this.tree_small=this.util.loadImage("/img/tree_small.png",this),this.tree_large=this.util.loadImage("/img/tree_large.png",this),this.tree_bare=this.util.loadImage("/img/tree_bare.png",this),this.tree_bare_fire1=this.util.loadImage("/img/tree_bare_fire1.png",this),this.tree_bare_fire2=this.util.loadImage("/img/tree_bare_fire2.png",this),this.bump_small=this.util.loadImage("/img/bump_small.png",this),this.bump_large=this.util.loadImage("/img/bump_large.png",this),this.bump_group=this.util.loadImage("/img/bump_group.png",this),this.rock=this.util.loadImage("/img/rock.png",this),this.stump=this.util.loadImage("/img/stump.png",this),this.jump=this.util.loadImage("/img/jump.png",this),this.otherSkier1=this.util.loadImage("/img/other_skier1.png",this),this.otherSkier2=this.util.loadImage("/img/other_skier2.png",this),this.otherSkier3=this.util.loadImage("/img/other_skier3.png",this),this.otherSkier_crash=this.util.loadImage("/img/other_skier_crash.png",this),this.snowboarder_left=this.util.loadImage("/img/snowboarder_left.png",this),this.snowboarder_right=this.util.loadImage("/img/snowboarder_right.png",this),this.snowboarder_crash=this.util.loadImage("/img/snowboarder_crash.png",this),this.skier.loadAssets(),this.lift.loadAssets(),this.images=this.images.concat(this.skier.images,this.lift.images)}loadFont(){this.font=new FontFace("ModernDOS","url(../font/ModernDOS8x16.ttf)"),this.font.load().then(function(t){document.fonts.add(t),document.body.style.fontFamily='"ModernDOS", Arial'}).catch(function(t){console.log("Error loading ModernDOS font: ",t)})}initGameObjectsAtStart(t,i){let e=[];for(let s=0;s<i;s++){let i=this.util.randomInt(3*-this.gameWidth/2,3*this.gameWidth/2),s=this.util.randomInt(-this.gameHeight/3,5*this.gameHeight/3);e.push(this.spawnNewGameObject(t,i,s))}return e}spawnNewGameObjectOffScreen(t){let i=this.getRandomCoordinateOffScreen();return this.spawnNewGameObject(t,i.x,i.y)}getRandomCoordinateOffScreen(t){let i=t?2*-this.gameHeight/3:-this.gameHeight/3,e=this.util.randomInt(3*-this.gameWidth/2,3*this.gameWidth/2),s=this.util.randomInt(i,5*this.gameHeight/3);if(e>-this.gameWidth/2-80&&e<this.gameWidth/2&&s>-this.gameHeight/3-80&&s<2*this.gameHeight/3)switch(this.util.randomInt(0,5)){case 0:e-=this.gameWidth+80;break;case 1:e-=this.gameWidth+80,s+=this.gameHeight+80;break;case 2:s+=this.gameHeight+80;break;case 3:e+=this.gameWidth+80,s+=this.gameHeight+80;break;default:e+=this.gameWidth+80}return{x:e,y:s}}spawnNewGameObject(t,i,e){switch(t){case"bump_group":return{game:this,x:i,y:e,hbXOffset:0,hbYOffset:0,hbWidth:64,hbHeight:32,jumpOverHeight:8,onCollision:this.slowOnCollision,img:this.bump_group};case"bump_small":return{game:this,x:i,y:e,hbXOffset:0,hbYOffset:0,hbWidth:16,hbHeight:4,jumpOverHeight:4,onCollision:this.slowOnCollision,img:this.bump_small};case"bump_large":return{game:this,x:i,y:e,hbXOffset:0,hbYOffset:0,hbWidth:24,hbHeight:8,jumpOverHeight:8,onCollision:this.slowOnCollision,img:this.bump_large};case"tree_small":return{game:this,x:i,y:e,hbXOffset:8,hbYOffset:22,hbWidth:14,hbHeight:10,jumpOverHeight:32,hasCollided:!1,onCollision:this.crashOnCollision,otherSkierCanCrashInto:!0,img:this.tree_small,drawThresholdY:-5};case"tree_large":return{game:this,x:i,y:e,hbXOffset:9,hbYOffset:52,hbWidth:15,hbHeight:12,jumpOverHeight:64,hasCollided:!1,onCollision:this.crashOnCollision,otherSkierCanCrashInto:!0,img:this.tree_large,drawThresholdY:-37};case"tree_bare":return{game:this,x:i,y:e,hbXOffset:7,hbYOffset:18,hbWidth:9,hbHeight:9,jumpOverHeight:27,hasCollided:!1,onCollision:this.crashOnCollision,otherSkierCanCrashInto:!0,img:this.tree_bare,drawThresholdY:1,isOnFire:!1};case"rock":return{game:this,x:i,y:e,hbXOffset:0,hbYOffset:0,hbWidth:23,hbHeight:11,jumpOverHeight:11,hasCollided:!1,onCollision:this.crashOnCollision,otherSkierCanCrashInto:!0,img:this.rock};case"jump":return{game:this,x:i,y:e,hbXOffset:0,hbYOffset:0,hbWidth:32,hbHeight:8,jumpOverHeight:8,hasCollided:!1,onCollision:this.jumpOnCollision,img:this.jump};case"stump":return{game:this,x:i,y:e,hbXOffset:0,hbYOffset:0,hbWidth:16,hbHeight:11,jumpOverHeight:11,hasCollided:!1,onCollision:this.crashOnCollision,otherSkierCanCrashInto:!0,img:this.stump};case"other_skier":return{x:i,y:e,xv:0,yv:.1,xSpeed:.15,hbXOffset:7,hbYOffset:13,hbWidth:11,hbHeight:11,hasCollided:!1,isCrashed:!1,timestamp:this.startTime+this.util.randomInt(0,1e3),img:this.otherSkier3};case"snowboarder":return{x:i,y:e,xv:-.25,yv:.75,xSpeed:.15,hbXOffset:7,hbYOffset:16,hbWidth:13,hbHeight:9,hasCollided:!1,isCrashed:!1,timestamp:this.startTime+this.util.randomInt(0,1e3),img:this.snowboarder_left};default:throw"Error! Invalid game object type: "+t}}resize(t,i){this.gameWidth=t,this.gameHeight=i,this.skier.x=this.gameWidth/2,this.skier.y=this.gameHeight/3,this.adaptGameObjectCountToScreenSize()}calculateGameObjectCounts(){let t=this.gameWidth*this.gameHeight;this.treeSmallCount=Math.floor(t*this.resCoefficient*this.treeSmallDensity),this.treeLargeCount=Math.floor(t*this.resCoefficient*this.treeLargeDensity),this.treeBareCount=Math.floor(t*this.resCoefficient*this.treeBareDensity),this.bumpGroupCount=Math.floor(t*this.resCoefficient*this.bumpGroupDensity),this.bumpSmallCount=Math.floor(t*this.resCoefficient*this.bumpSmallDensity),this.bumpLargeCount=Math.floor(t*this.resCoefficient*this.bumpLargeDensity),this.rockCount=Math.floor(t*this.resCoefficient*this.rockDensity),this.jumpCount=Math.floor(t*this.resCoefficient*this.jumpDensity),this.stumpCount=Math.floor(t*this.resCoefficient*this.stumpDensity),this.otherSkierCount=Math.floor(t*this.resCoefficient*this.otherSkierDensity),this.snowboarderCount=Math.floor(t*this.resCoefficient*this.snowboarderDensity)}adaptGameObjectCountToScreenSize(){this.calculateGameObjectCounts(),this.correctGameObjectCount(this.treesSmall,this.treeSmallCount,"tree_small"),this.correctGameObjectCount(this.treesLarge,this.treeLargeCount,"tree_large"),this.correctGameObjectCount(this.treesBare,this.treeBareCount,"tree_bare"),this.correctGameObjectCount(this.bumpsGroup,this.bumpGroupCount,"bump_group"),this.correctGameObjectCount(this.bumpsSmall,this.bumpSmallCount,"bump_small"),this.correctGameObjectCount(this.bumpsLarge,this.bumpLargeCount,"bump_large"),this.correctGameObjectCount(this.rocks,this.rockCount,"rock"),this.correctGameObjectCount(this.jumps,this.jumpCount,"jump"),this.correctGameObjectCount(this.stumps,this.stumpCount,"stump"),this.correctGameObjectCount(this.otherSkiers,this.otherSkierCount,"other_skier"),this.correctGameObjectCount(this.snowboarders,this.snowboarderCount,"snowboarder")}correctGameObjectCount(t,i,e){let s=Math.abs(t.length-i);if(t.length>i)for(let i=0;i<t.length;i++){let e=0,h=t[i].x,r=t[i].y;if(h>-this.gameWidth/2&&h<this.gameWidth/2&&r>-this.gameHeight/3&&r<2*this.gameHeight/3||(t.splice(i,1),e++),e>=s)break}else if(t.length<i)for(let i=0;i<s;i++)t.push(this.spawnNewGameObjectOffScreen(e))}update(t){this.currentTime=this.util.timestamp(),this.skier.update(this.getMouseAndVelocityInfo()),this.lift.update(t),this.updateOtherSkiers(t),this.updateSnowboarders(t),this.updateSkierTrail(t),this.updateGameObjects(this.bumpsGroup,t),this.updateGameObjects(this.bumpsSmall,t),this.updateGameObjects(this.bumpsLarge,t),this.updateGameObjects(this.treesSmall,t),this.updateGameObjects(this.treesLarge,t),this.updateGameObjects(this.treesBare,t),this.updateGameObjects(this.rocks,t),this.updateGameObjects(this.jumps,t),this.updateGameObjects(this.stumps,t),this.yDist+=this.skier.yv*t;let i=this.util.timestamp();i-this.timestampFire>=50&&(this.currentTreeFireImg==this.tree_bare_fire1?this.currentTreeFireImg=this.tree_bare_fire2:this.currentTreeFireImg=this.tree_bare_fire1,this.timestampFire=i)}updateGameObjects(t,i){for(let e=0;e<t.length;e++){let s=t[e];this.hasGameObjectBeenPassed(s)?this.recycleGameObjectPosition(t[e]):this.collisionsEnabled&&this.isGameObjectCollidingWithSkier(s)&&this.skier.jumpOffset<s.jumpOverHeight&&void 0!==s.onCollision&&(void 0!==s.hasCollided?s.hasCollided||(s.onCollision(),s.hasCollided=!0):s.onCollision());for(let t=0;t<this.otherSkiers.length;t++){let i=this.otherSkiers[t];this.collisionsEnabled&&!i.isCrashed&&this.isGameObjectCollidingWithOtherSkier(i,s)&&void 0!==s.otherSkierCanCrashInto&&s.otherSkierCanCrashInto&&this.crashOtherSkierOnCollision(i)}for(let t=0;t<this.snowboarders.length;t++){let i=this.snowboarders[t];this.collisionsEnabled&&!i.isCrashed&&this.isGameObjectCollidingWithOtherSkier(i,s)&&void 0!==s.otherSkierCanCrashInto&&s.otherSkierCanCrashInto&&this.crashSnowboarderOnCollision(i)}s.x-=this.skier.xv*i,s.y-=this.skier.yv*i}}updateSkierTrail(t){this.skier.isStopped||this.skier.isJumping||this.skierTrail.push({x:2,y:24});for(let i=0;i<this.skierTrail.length;i++)this.skierTrail[i].x-=this.skier.xv*t,this.skierTrail[i].y-=this.skier.yv*t,this.skierTrail[i].y<-this.gameHeight/3-50&&this.skierTrail.splice(i,1)}recycleGameObjects(t){for(let i=0;i<t.length;i++){let e=t[i];this.hasGameObjectBeenPassed(e)&&this.recycleGameObjectPosition(e)}}recycleGameObjectPosition(t,i){let e=this.getRandomCoordinateOffScreen(i);t.x=e.x,t.y=e.y,void 0!==typeof t.hasCollided&&(t.hasCollided=!1),void 0!==typeof t.isOnFire&&(t.isOnFire=!1)}hasGameObjectBeenPassed(t){return t.y<-this.gameHeight/3-50||t.x<3*-this.gameWidth/2||t.x>3*this.gameWidth/2}updateOtherSkiers(t){for(let i=0;i<this.otherSkiers.length;i++){let e=this.otherSkiers[i];if(e.isCrashed)this.hasGameObjectBeenPassed(e)&&(this.recycleGameObjectPosition(e),e.isCrashed=!1);else{let t=this.util.timestamp();if(t-e.timestamp>=1e3){switch(this.util.randomInt(0,3)){case 0:e.xv=-e.xSpeed,e.img=this.otherSkier1;break;case 1:e.xv=e.xSpeed,e.img=this.otherSkier2;break;default:e.xv=0,e.img=this.otherSkier3}e.timestamp=t,e.yv=.1}for(let t=0;t<this.otherSkiers.length;t++)if(i!=t){let i=this.otherSkiers[t];this.isGameObjectCollidingWithOtherSkier(e,i)&&(this.crashOtherSkierOnCollision(e),this.crashOtherSkierOnCollision(i))}}!e.hasCollided&&this.isGameObjectCollidingWithSkier(e)&&this.skier.jumpOffset<29&&(this.skier.isCrashed=!0,this.style=0,e.hasCollided=!0,this.crashOtherSkierOnCollision(e)),(e.y<-2e3||e.y>5e3||e.x>3e3||e.x<-3e3)&&(this.recycleGameObjectPosition(e),e.isCrashed=!1),e.x-=this.skier.xv*t-e.xv,e.y-=this.skier.yv*t-e.yv}}updateSnowboarders(t){for(let i=0;i<this.snowboarders.length;i++){let e=this.snowboarders[i];if(e.isCrashed)this.hasGameObjectBeenPassed(e)&&(this.recycleGameObjectPosition(e),e.isCrashed=!1);else{let t=this.util.timestamp();if(t-e.timestamp>=500){switch(this.util.randomInt(0,2)){case 0:e.xv=-e.xSpeed,e.img=this.snowboarder_left;break;case 1:e.xv=e.xSpeed,e.img=this.snowboarder_right}e.timestamp=t,e.yv=.75}for(let t=0;t<this.snowboarders.length;t++)if(i!=t){let i=this.snowboarders[t];this.isGameObjectCollidingWithOtherSkier(e,i)&&(this.crashSnowboarderOnCollision(e),this.crashSnowboarderOnCollision(i))}}!e.hasCollided&&this.isGameObjectCollidingWithSkier(e)&&this.skier.jumpOffset<30&&(this.skier.isCrashed=!0,this.style=0,e.hasCollided=!0,this.crashSnowboarderOnCollision(e)),(e.y<-2e3||e.y>5e3||e.x>3e3||e.x<-3e3)&&(this.recycleGameObjectPosition(e),e.isCrashed=!1),e.x-=this.skier.xv*t-e.xv,e.y-=this.skier.yv*t-e.yv}}isGameObjectCollidingWithSkier(t){let i=this.skier.hitbox,e={x:t.x+t.hbXOffset,y:t.y+t.hbYOffset,width:t.hbWidth,height:t.hbHeight};return this.util.areRectanglesColliding(i,e)}isGameObjectCollidingWithOtherSkier(t,i){let e={x:t.x+t.hbXOffset,y:t.y+t.hbYOffset,width:t.hbWidth,height:t.hbHeight},s={x:i.x+i.hbXOffset,y:i.y+i.hbYOffset,width:i.hbWidth,height:i.hbHeight};return this.util.areRectanglesColliding(e,s)}crashOnCollision(){this.game.skier.isCrashed=!0,this.game.style=0,void 0!==typeof this.isOnFire&&this.game.skier.isJumping&&(this.isOnFire=!0)}crashOtherSkierOnCollision(t){t.isCrashed||(t.isCrashed=!0,t.xv=0,t.yv=0,t.img=this.otherSkier_crash)}crashSnowboarderOnCollision(t){t.isCrashed||(t.isCrashed=!0,t.xv=0,t.yv=0,t.img=this.snowboarder_crash)}jumpOnCollision(){if(!(this.game.skier.isCrashed||this.game.skier.isSkatingLeft||this.game.skier.isSkatingRight||this.game.skier.isJumping)){let t=this.game.skier.yv*this.game.jumpVMult+this.game.jumpVBase;this.game.skier.jumpV=t,this.game.skier.isJumping=!0,this.game.stylePointsToAwardOnLanding=5*t}}slowOnCollision(){}getMouseAndVelocityInfo(){let t=-(this.mousePos.x-(this.gameWidth/2+8)),i=-(this.mousePos.y-(this.gameHeight/3+32)),e=this.util.degrees(Math.atan(i/t)),s=0,h=0,r=0;t>0?(s=e,h=-Math.cos(this.util.radians(s)),r=-Math.sin(this.util.radians(s))):t<0?(i>0?s=180+e:i<0&&(s=-180+e),h=-Math.cos(this.util.radians(s)),r=-Math.sin(this.util.radians(s))):0==t?(s=i>0?-90:90,h=Math.cos(this.util.radians(s)),r=Math.sin(this.util.radians(s))):0==i&&(s=180,h=Math.cos(this.util.radians(s)),r=Math.sin(this.util.radians(s)));let a=this.util.degrees(Math.atan(this.skier.yv/this.skier.xv)),o=0,l=0,n=0;return this.skier.xv>0?(o=a,l=-Math.cos(this.util.radians(o)),n=-Math.sin(this.util.radians(o))):this.skier.xv<0?(this.skier.yv>0?o=180+a:this.skier.yv<0&&(o=-180+a),l=-Math.cos(this.util.radians(o)),n=-Math.sin(this.util.radians(o))):0==this.skier.xv?(o=this.skier.yv>0?-90:90,l=Math.cos(this.util.radians(o)),n=Math.sin(this.util.radians(o))):0==this.skier.yv&&(o=180,l=Math.cos(this.util.radians(o)),n=Math.sin(this.util.radians(o))),[s,[h,r],[l,n]]}confirmImagesAreAllLoaded(){for(let t=0;t<this.images.length;t++){if(!this.images[t].isLoaded)return!1}return!0}draw(t){if(t.clearRect(0,0,this.gameWidth,this.gameHeight),t.fillStyle="#FFFFFF",t.fillRect(0,0,this.gameWidth,this.gameHeight),this.doImageLoadCheck){if(!this.confirmImagesAreAllLoaded())return;this.doImageLoadCheck=!1}for(let i=0;i<this.bumpsGroup.length;i++){let e=this.bumpsGroup[i];t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y)}for(let i=0;i<this.bumpsSmall.length;i++){let e=this.bumpsSmall[i];t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y)}for(let i=0;i<this.bumpsLarge.length;i++){let e=this.bumpsLarge[i];t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y)}for(let i=0;i<this.skierTrail.length;i++)t.fillStyle="#DDDDDD",t.fillRect(this.skier.x+this.skierTrail[i].x,this.skier.y+this.skierTrail[i].y,2,1),t.fillRect(this.skier.x+this.skierTrail[i].x+8,this.skier.y+this.skierTrail[i].y,2,1);for(let i=0;i<this.jumps.length;i++){let e=this.jumps[i];t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y)}for(let i=0;i<this.otherSkiers.length;i++){let e=this.otherSkiers[i];t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y)}for(let i=0;i<this.snowboarders.length;i++){let e=this.snowboarders[i];t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y)}for(let i=0;i<this.rocks.length;i++){let e=this.rocks[i];t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y)}for(let i=0;i<this.stumps.length;i++){let e=this.stumps[i];t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y)}for(let i=0;i<this.treesSmall.length;i++){let e=this.treesSmall[i];e.y<e.drawThresholdY&&t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y)}for(let i=0;i<this.treesLarge.length;i++){let e=this.treesLarge[i];e.y<e.drawThresholdY&&t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y)}for(let i=0;i<this.treesBare.length;i++){let e=this.treesBare[i];e.y<e.drawThresholdY&&(e.isOnFire?t.drawImage(this.currentTreeFireImg,this.skier.x+e.x,this.skier.y+e.y):t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y))}this.lift.drawTowersAbovePlayer(t),this.skier.draw(t);for(let i=0;i<this.treesSmall.length;i++){let e=this.treesSmall[i];e.y>=e.drawThresholdY&&t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y)}for(let i=0;i<this.treesLarge.length;i++){let e=this.treesLarge[i];e.y>=e.drawThresholdY&&t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y)}for(let i=0;i<this.treesBare.length;i++){let e=this.treesBare[i];e.y>=e.drawThresholdY&&(e.isOnFire?t.drawImage(this.currentTreeFireImg,this.skier.x+e.x,this.skier.y+e.y):t.drawImage(e.img,this.skier.x+e.x,this.skier.y+e.y))}this.lift.drawChairs(t),this.lift.drawCables(t),this.lift.drawTowersBelowPlayer(t),this.lift.drawTowerTops(t);let i=this.gameWidth>window.innerWidth?this.gameWidth-Math.floor((this.gameWidth-window.innerWidth)/2):this.gameWidth,e=this.gameHeight>window.innerHeight?Math.floor((this.gameHeight-window.innerHeight)/2):0;t.fillStyle="#000000",t.fillRect(i-140,e,140,52),t.fillStyle="#FFFFFF",t.fillRect(i-139,e+1,138,50),t.font="14px ModernDOS",t.fillStyle="#000000",t.fillText("Time:  "+this.util.timeToString(this.currentTime-this.startTime),i-136,e+11);let s="     ",h=Math.ceil(this.yDist/28.7514);if(h>999999?s="":h>99999?s=" ":h>9999?s="  ":h>999?s="   ":h>99&&(s="    "),t.fillText("Dist:"+s+h.toString().padStart(2,"0")+"m",i-136,e+23),t.fillText("Speed:    "+Math.ceil(this.skier.currentSpeed/28.7514).toString().padStart(2,"0")+"m/s",i-136,e+35),t.fillText("Style:       "+Math.floor(this.style),i-136,e+47),this.isPaused){let i=this.util.timestamp();i-this.timestampPaused>500&&(this.drawIsPaused=!this.drawIsPaused,this.timestampPaused=i),this.drawIsPaused&&(t.font="14px ModernDOS",t.fillText("GAME PAUSED",this.gameWidth/2-25,e+25))}}}